version: '3'

services:

  confd:
    build:
      context: confd 
      dockerfile: Dockerfile
    ports:
      - "8008:8008"
      - "8888:8888"
    restart: on-failure

  backend:
    network_mode: host
    build:
      context: backend
      dockerfile: Dockerfile
    image: catalog_backend_api:latest
    ports:
      - "3031:3031"
    volumes:
      - ./conf/yangcatalog.conf:/etc/yangcatalog/yangcatalog.conf:ro
      - /var/yang:/var/yang:rw
      - webroot:/var/www/html
      - /etc/localtime:/etc/localtime:ro
    restart: on-failure

  yang-search:
    network_mode: host
    build:
      context: search
      dockerfile: Dockerfile
    ports:
      - "8005:8005"
    volumes:
      - ./conf/yangcatalog.conf:/etc/yangcatalog/yangcatalog.conf:ro
      - /var/yang:/var/yang:rw
      - /etc/localtime:/etc/localtime:ro
      - /var/run/yang:/var/run/yang:rw

  yangre:
    build:
      context: yangre
      dockerfile: Dockerfile
    ports:
      - "5000:5000"

  api-receiver:
    network_mode: host
    image: catalog_backend_api:latest
    command: bash -c "python api/receiver.py"
    volumes:
      - ./conf/yangcatalog.conf:/etc/yangcatalog/yangcatalog.conf:ro
      - /var/yang:/var/yang:rw
    restart: on-failure

  api-recovery:
    network_mode: host
    image: catalog_backend_api:latest
    command: bash -c "python recovery/recovery.py --type load --protocol http"
    volumes:
      - ./conf/yangcatalog.conf:/etc/yangcatalog/yangcatalog.conf:ro
      - /var/yang:/var/yang:rw
    depends_on:
      - confd
    restart: on-failure

  frontend:
    build:
      context: .
      dockerfile: web_root/Dockerfile
    volumes:
      - webroot:/usr/share/nginx/html
      - ./search/static/:/usr/share/nginx/html/yang-search/static/
      - ./yangre/app/static/:/usr/share/nginx/html/yangre/static/
      - ./bottle-yang-extractor-validator/yangvalidator/static/:/usr/share/nginx/html/yangvalidator/static/
      - ./conf/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /var/log/nginx:/var/log/nginx:rw
    depends_on:
      - backend
      - yang-search
      - yangre
      - elasticsearch
      - php
    ports:
      - "8080:8080"
      - "80:80"

  php:
    build:
      context: web_root
      dockerfile: PHP-Dockerfile
    volumes:
      - ./web_root:/scripts:ro

  yangvalidator:
    build:
      context: bottle-yang-extractor-validator
      dockerfile: Dockerfile
    image: yangvalidator:latest
    volumes:
      - ./conf/yangcatalog.conf:/etc/yangcatalog/yangcatalog.conf:ro
    ports:
      - "8090:8090"

  elasticsearch:
    build:
      context: elasticsearch
      dockerfile: Dockerfile
    environment:
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - /var/log/elasticsearch:/var/log/elasticsearch
      - /var/lib/elasticsearch:/var/lib/elasticsearch
    #volumes:
    #  - esdata1:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    restart: on-failure

  rabbit:
    image: "rabbitmq:3-management"
    hostname: "rabbit1"
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "15672:15672"
      - "5672:5672"
    labels:
      NAME: "rabbitmq1"
    volumes: []
      #- "./enabled_plugins:/etc/rabbitmq/enabled_plugins"
      #- "./rabbitmq.config:/etc/rabbitmq/rabbitmq.config:ro"
      #- "./autocluster-0.4.1.ez:/usr/lib/rabbitmq/lib/rabbitmq_server-3.5.5/plugins/autocluster-0.4.1.ez"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 10s
      retries: 5

  mariadb:
    image: mariadb:10-bionic
    ports:
      - "3306:3306"
    volumes:
      - /a/mysql:/var/lib/mysql:rw
      - ./conf/mariadb:/docker-entrypoint-initdb.d:ro
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: yang_catalog
      MYSQL_USER: yang
      MYSQL_PASSWORD: Y@ng3r123

  sdo-analysis:
    build:
      context: sdo_analysis
      dockerfile: Dockerfile
    volumes:
      - ./conf/yangcatalog.conf:/etc/yangcatalog/yangcatalog.conf:ro
      - /var/yang:/var/yang:rw

volumes:
  webroot:
